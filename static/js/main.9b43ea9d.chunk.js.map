{"version":3,"sources":["Action/API/index.jsx","Action/ActionBlock.jsx","Action/ActionBlock2.jsx","img/182.png","img/co.png","index.js"],"names":["delay","s","Promise","resolve","reject","setTimeout","takeAction","contract_account","action","dataValue","setCosoleString","a","privateKey","localStorage","getItem","rpc","JsonRpc","signatureProvider","JsSignatureProvider","api","Api","textDecoder","TextDecoder","textEncoder","TextEncoder","transact","actions","account","name","authorization","actor","permission","data","blocksBehind","expireSeconds","resultWithConfig","console","dir","processed","action_traces","inline_traces","concat","then","ApiService","open","parseInt","substring","from","to","quantity","memo","catch","err","removeItem","gameID","user","g_id","Button","props","className","type","style","onClick","children","ActionBlock","handleSubmit","bind","event","preventDefault","form","this","state","params","setConsole","setItem","key","username","bet","error","onSubmit","value","placeholder","onChange","handleChange","pattern","required","autoComplete","React","Component","ActionBlock2","gameid","Manage","console_block_string","target","setState","src","img_18","alt","parms","img_co","Consoleblock","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b43ea9d.chunk.js","sourcesContent":["import { Api, JsonRpc } from 'eosjs';\r\nimport React, { useState } from 'react';\r\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig'\r\nvar delay = function(s){\r\n  return new Promise(function(resolve,reject){\r\n   setTimeout(resolve,s); \r\n  });\r\n};\r\n\r\nasync function takeAction(contract_account,action,dataValue,setCosoleString) {\r\n    const privateKey = localStorage.getItem(\"User_EOS_key\");\r\n    const rpc = new JsonRpc(\"https://api.testnet.eos.io\");\r\n    const signatureProvider = new JsSignatureProvider([privateKey]);\r\n    const api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\r\n  \r\n    // Main call to blockchain after setting action, account_name and data\r\n    try {\r\n      const resultWithConfig = await api.transact({\r\n        actions: [{\r\n          account:contract_account,\r\n          name: action,\r\n          authorization: [{\r\n            actor: localStorage.getItem(\"User_EOS_account\"),\r\n            permission: 'active',\r\n          }],\r\n          data: dataValue,\r\n        }]\r\n      }, {\r\n        blocksBehind: 3,\r\n        expireSeconds: 30,\r\n      });\r\n    \r\n      console.dir(resultWithConfig);\r\n      if(action==\"transfer\"){\r\n        setCosoleString(resultWithConfig.processed.action_traces[0].inline_traces[1].console.concat(\"\\n waiting for open \"));\r\n        return delay(1000).then(()=>ApiService.open(setCosoleString,parseInt(resultWithConfig.processed.action_traces[0].inline_traces[1].console.substring(9,64)),10)) ;\r\n      }\r\n      if(action==\"open\"){\r\n        setCosoleString(resultWithConfig.processed.action_traces[0].console);\r\n      }\r\n      return resultWithConfig;\r\n    } catch (err) {\r\n      console.dir(err)\r\n      throw(err)\r\n    }\r\n  }\r\nclass ApiService {\r\n  static bet(setCosoleString){\r\n      return new Promise((resolve, reject) => {\r\n        if (!localStorage.getItem(\"User_EOS_account\")) {\r\n          return reject();\r\n        }\r\n        takeAction(\"eosio.token\",\"transfer\", { from: localStorage.getItem(\"User_EOS_account\"),to: \"ovsbwwwvfchk\",quantity: \"1.1000 TNT\",memo: \"bet\"},setCosoleString)\r\n          .then(() => {\r\n            resolve();\r\n          })\r\n          .catch(err => {\r\n            localStorage.removeItem(\"User_EOS_account\");\r\n            reject(err);\r\n          });\r\n      });\r\n  \r\n    }\r\n  static open(setCosoleString,gameID){\r\n    return new Promise((resolve, reject) => {\r\n      if (!localStorage.getItem(\"User_EOS_account\")) {\r\n        return reject();\r\n      }\r\n      takeAction(\"ovsbwwwvfchk\",\"open\", { user: localStorage.getItem(\"User_EOS_account\"),g_id:gameID},setCosoleString)\r\n        .then(() => {\r\n          resolve();\r\n        })\r\n        .catch(err => {\r\n          localStorage.removeItem(\"User_EOS_account\");\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n}\r\nexport default ApiService;","import React from 'react';\r\nimport ApiService from './API';\r\n\r\nconst Button = ({ ...props }) => {\r\n  const { className, type, style, onClick, children } = props;\r\n  return (\r\n    <button\r\n      className={`Button${ className ? ' ' + className : '' }`}\r\n      { ...{ type, style, onClick } }\r\n    >{ children }</button>\r\n  );\r\n}\r\n\r\nvar delay = function(s){\r\n    return new Promise(function(resolve,reject){\r\n     setTimeout(resolve,s); \r\n    });\r\n  };\r\n\r\nclass ActionBlock extends React.Component {\r\n    constructor(props) {\r\n        // Inherit constructor\r\n        super(props);\r\n        // State for form data and error message\r\n        \r\n        // Bind functions\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        // Stop the default form submit browser behaviour\r\n        event.preventDefault();\r\n        // Extract `form` state\r\n        const { form } = this.props.state;\r\n        const setCosoleString=(params) => this.props.setConsole(params);\r\n        // Extract `setUser` of `UserAction` and `user.name` of UserReducer from redux\r\n        //const { setUser } = this.props;\r\n        console.dir(\"dhfkajshfljashfla\");\r\n        localStorage.setItem(\"User_EOS_key\", form.key);\r\n        localStorage.setItem(\"User_EOS_account\", form.username);\r\n        // Send a login transaction to the blockchain by calling the ApiService,\r\n        // If it successes, save the username to redux store\r\n        // Otherwise, save the error state for displaying the message\r\n        this.props.setConsole(\"waiting~~\");\r\n        return ApiService.bet(setCosoleString)\r\n            .then(() => {\r\n                console.dir(\"\");\r\n            })\r\n            .catch(err => {\r\n                setCosoleString(\"some thing was wrong please try it again\")\r\n            });\r\n      }\r\n    render() {\r\n        const { form, error } = this.props.state;\r\n        return (\r\n            <form name=\"form\" onSubmit={this.handleSubmit}>\r\n                <div className=\"field\">\r\n                    <label>Account name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={form.username}\r\n                        placeholder=\"All small letters, a-z, 1-5 or dot, max 12 characters\"\r\n                        onChange={this.props.handleChange}\r\n                        pattern=\"[\\.a-z1-5]{2,12}\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Private key</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"key\"\r\n                        value={form.key}\r\n                        onChange={this.props.handleChange}\r\n                        pattern=\"^.{51,}$\"\r\n                        required\r\n                        autoComplete=\"new-password\"\r\n                    />\r\n                </div>\r\n                <div className=\"field form-error\">\r\n                    {error && <span className=\"error\">{error}</span>}\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <Button type=\"submit\" className=\"green\">\r\n                        {\"BET\"}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ActionBlock;\r\n","import React from 'react';\r\nimport ApiService from './API';\r\n\r\nclass ActionBlock2 extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(event) {\r\n        // Stop the default form submit browser behaviour\r\n        event.preventDefault();\r\n        // Extract `form` state\r\n        const { form } = this.props.state;\r\n        const setCosoleString=(params) => this.props.setConsole(params);\r\n        // Extract `setUser` of `UserAction` and `user.name` of UserReducer from redux\r\n        //const { setUser } = this.props;\r\n        console.dir(\"dhfljashfla\");\r\n        localStorage.setItem(\"User_EOS_key\", form.key);\r\n        localStorage.setItem(\"User_EOS_account\", form.username);\r\n        // Send a login transaction to the blockchain by calling the ApiService,\r\n        // If it successes, save the username to redux store\r\n        // Otherwise, save the error state for displaying the message\r\n        this.props.setConsole(\"waiting~~\");\r\n        return ApiService.open(setCosoleString,form.gameid)\r\n            .then(() => {\r\n                console.dir(\"dhfljtututuhfla\");\r\n            })\r\n            .catch(err => {\r\n            });\r\n      }\r\n    render(){\r\n        const { form, error } = this.props.state;\r\n        return(\r\n            <form name=\"form\" onSubmit={this.handleSubmit}>\r\n                <div className=\"field\" >\r\n                    <label>Game id</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"gameid\"\r\n                        value={form.gameid}\r\n                        placeholder=\"in put game ID\"\r\n                        onChange={this.props.handleChange}\r\n                        pattern=\"[\\.0-9]{1,12}\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <Button type=\"submit\" className=\"green\">\r\n                        {\"open\"}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst Button = ({ ...props }) => {\r\n    const { className, type, style, onClick, children } = props;\r\n    return (\r\n      <button\r\n        className={`Button${ className ? ' ' + className : '' }`}\r\n        { ...{ type, style, onClick } }\r\n      >{ children }</button>\r\n    );\r\n  }\r\n\r\nexport default ActionBlock2;\r\n","export default __webpack_public_path__ + \"static/media/182.be886b0a.png\";","export default __webpack_public_path__ + \"static/media/co.9e39142a.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {ActionBlock, ActionBlock2} from './Action';\r\nimport \"./index.css\";\r\nimport img_18 from \"./img/182.png\";\r\nimport img_co from \"./img/co.png\";\r\n\r\nclass Manage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        // Inherit constructor\r\n        // State for form data and error message\r\n        this.state = {\r\n            form: {\r\n                username: '',\r\n                key: '',\r\n                gameid:'',\r\n                error: '',\r\n                },\r\n            console_block_string:'welcome ',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n      }\r\n      handleChange(event) {\r\n        const { name, value } = event.target;\r\n        const { form } = this.state;\r\n\r\n        this.setState({\r\n            form: {\r\n                ...form,\r\n                [name]: value,\r\n                error: '',\r\n            },\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { console_block_string } = this.state;\r\n        return(\r\n                <main>\r\n                    <img src={img_18} alt=\"Rice\"/>\r\n                    <ActionBlock setConsole={(parms)=>this.setState({console_block_string:parms})} handleChange={(event)=>this.handleChange(event)} state={this.state}/>\r\n                    <ActionBlock2 setConsole={(parms)=>this.setState({console_block_string:parms})} handleChange={(event)=>this.handleChange(event)} state={this.state}/>\r\n                    <Consoleblock value={this.state.console_block_string} />\r\n                    <h2> testingaccount:haeayhgpzuog</h2>\r\n                    <h2> testingkey:5K4wrLBXqAAMqvK6dFVwArV4U7ooofy8AVGTSkjxRcCprCeRT4o</h2>\r\n                    <img src={img_co} alt=\"Rice\"/>\r\n                </main>\r\n        )\r\n    }\r\n}\r\nclass  Consoleblock extends React.Component {\r\n\r\n\r\n    render(){\r\n\r\n     \r\n    return(\r\n            <h3 id=\"CONTEX\">\r\n                {this.props.value}\r\n            </h3>\r\n        )\r\n    }\r\n}\r\nReactDOM.render(\r\n    <Manage />,\r\n    document.getElementById('root')\r\n);\r\n\r\n                //<ActionBlock setConsole={(parms)=>this.setState({console_block_string:parms})} />\r\n                //"],"sourceRoot":""}