{"version":3,"sources":["Action/API/index.jsx","Action/ActionBlock.jsx","Action/ActionBlock2.jsx","img/182.png","img/co.png","index.js"],"names":["takeAction","contract_account","action","dataValue","setCosoleString","a","privateKey","localStorage","getItem","rpc","JsonRpc","signatureProvider","JsSignatureProvider","api","Api","textDecoder","TextDecoder","textEncoder","TextEncoder","transact","actions","account","name","authorization","actor","permission","data","blocksBehind","expireSeconds","resultWithConfig","console","dir","processed","action_traces","inline_traces","ApiService","Promise","resolve","reject","from","to","quantity","memo","then","catch","err","removeItem","gameID","user","g_id","Button","props","className","type","style","onClick","children","ActionBlock","handleSubmit","bind","event","preventDefault","form","this","state","setItem","key","username","setConsole","bet","params","error","onSubmit","value","placeholder","onChange","handleChange","pattern","required","autoComplete","React","Component","ActionBlock2","open","gameid","Manage","console_block_string","target","setState","src","img_18","alt","parms","img_co","Consoleblock","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26af5480.chunk.js","sourcesContent":["import { Api, JsonRpc } from 'eosjs';\r\nimport React, { useState } from 'react';\r\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig'\r\n\r\nasync function takeAction(contract_account,action,dataValue,setCosoleString) {\r\n    const privateKey = localStorage.getItem(\"User_EOS_key\");\r\n    const rpc = new JsonRpc(\"https://api.testnet.eos.io\");\r\n    const signatureProvider = new JsSignatureProvider([privateKey]);\r\n    const api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\r\n  \r\n    // Main call to blockchain after setting action, account_name and data\r\n    try {\r\n      const resultWithConfig = await api.transact({\r\n        actions: [{\r\n          account:contract_account,\r\n          name: action,\r\n          authorization: [{\r\n            actor: localStorage.getItem(\"User_EOS_account\"),\r\n            permission: 'active',\r\n          }],\r\n          data: dataValue,\r\n        }]\r\n      }, {\r\n        blocksBehind: 3,\r\n        expireSeconds: 30,\r\n      });\r\n    \r\n      console.dir(resultWithConfig);\r\n      if(action==\"transfer\"){\r\n        setCosoleString(resultWithConfig.processed.action_traces[0].inline_traces[1].console);\r\n      }\r\n      if(action==\"open\"){\r\n        setCosoleString(resultWithConfig.processed.action_traces[0].console);\r\n      }\r\n      return resultWithConfig;\r\n    } catch (err) {\r\n      console.dir(err)\r\n      throw(err)\r\n    }\r\n  }\r\nclass ApiService {\r\n  static bet(setCosoleString){\r\n      return new Promise((resolve, reject) => {\r\n        if (!localStorage.getItem(\"User_EOS_account\")) {\r\n          return reject();\r\n        }\r\n        takeAction(\"eosio.token\",\"transfer\", { from: localStorage.getItem(\"User_EOS_account\"),to: \"ovsbwwwvfchk\",quantity: \"1.1000 TNT\",memo: \"bet\"},setCosoleString)\r\n          .then(() => {\r\n            resolve();\r\n          })\r\n          .catch(err => {\r\n            localStorage.removeItem(\"User_EOS_account\");\r\n            reject(err);\r\n          });\r\n      });\r\n  \r\n    }\r\n  static open(setCosoleString,gameID){\r\n    return new Promise((resolve, reject) => {\r\n      if (!localStorage.getItem(\"User_EOS_account\")) {\r\n        return reject();\r\n      }\r\n      takeAction(\"ovsbwwwvfchk\",\"open\", { user: localStorage.getItem(\"User_EOS_account\"),g_id:gameID},setCosoleString)\r\n        .then(() => {\r\n          resolve();\r\n        })\r\n        .catch(err => {\r\n          localStorage.removeItem(\"User_EOS_account\");\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n}\r\nexport default ApiService;","import React from 'react';\r\nimport ApiService from './API';\r\n\r\nconst Button = ({ ...props }) => {\r\n  const { className, type, style, onClick, children } = props;\r\n  return (\r\n    <button\r\n      className={`Button${ className ? ' ' + className : '' }`}\r\n      { ...{ type, style, onClick } }\r\n    >{ children }</button>\r\n  );\r\n}\r\n\r\nclass ActionBlock extends React.Component {\r\n    constructor(props) {\r\n        // Inherit constructor\r\n        super(props);\r\n        // State for form data and error message\r\n        \r\n        // Bind functions\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        // Stop the default form submit browser behaviour\r\n        event.preventDefault();\r\n        // Extract `form` state\r\n        const { form } = this.props.state;\r\n        const setCosoleString=(params) => this.props.setConsole(params);\r\n        // Extract `setUser` of `UserAction` and `user.name` of UserReducer from redux\r\n        //const { setUser } = this.props;\r\n        console.dir(\"dhfkajshfljashfla\");\r\n        localStorage.setItem(\"User_EOS_key\", form.key);\r\n        localStorage.setItem(\"User_EOS_account\", form.username);\r\n        // Send a login transaction to the blockchain by calling the ApiService,\r\n        // If it successes, save the username to redux store\r\n        // Otherwise, save the error state for displaying the message\r\n        this.props.setConsole(\"waiting~~\");\r\n        return ApiService.bet(setCosoleString)\r\n            .then(() => {\r\n                console.dir(\"dhfljashfla\");\r\n            })\r\n            .catch(err => {\r\n            });\r\n      }\r\n    render() {\r\n        const { form, error } = this.props.state;\r\n        return (\r\n            <form name=\"form\" onSubmit={this.handleSubmit}>\r\n                <div className=\"field\">\r\n                    <label>Account name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={form.username}\r\n                        placeholder=\"All small letters, a-z, 1-5 or dot, max 12 characters\"\r\n                        onChange={this.props.handleChange}\r\n                        pattern=\"[\\.a-z1-5]{2,12}\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Private key</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"key\"\r\n                        value={form.key}\r\n                        onChange={this.props.handleChange}\r\n                        pattern=\"^.{51,}$\"\r\n                        required\r\n                        autoComplete=\"new-password\"\r\n                    />\r\n                </div>\r\n                <div className=\"field form-error\">\r\n                    {error && <span className=\"error\">{error}</span>}\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <Button type=\"submit\" className=\"green\">\r\n                        {\"BET\"}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ActionBlock;\r\n","import React from 'react';\r\nimport ApiService from './API';\r\n\r\nclass ActionBlock2 extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(event) {\r\n        // Stop the default form submit browser behaviour\r\n        event.preventDefault();\r\n        // Extract `form` state\r\n        const { form } = this.props.state;\r\n        const setCosoleString=(params) => this.props.setConsole(params);\r\n        // Extract `setUser` of `UserAction` and `user.name` of UserReducer from redux\r\n        //const { setUser } = this.props;\r\n        console.dir(\"dhfljashfla\");\r\n        localStorage.setItem(\"User_EOS_key\", form.key);\r\n        localStorage.setItem(\"User_EOS_account\", form.username);\r\n        // Send a login transaction to the blockchain by calling the ApiService,\r\n        // If it successes, save the username to redux store\r\n        // Otherwise, save the error state for displaying the message\r\n        this.props.setConsole(\"waiting~~\");\r\n        return ApiService.open(setCosoleString,form.gameid)\r\n            .then(() => {\r\n                console.dir(\"dhfljtututuhfla\");\r\n            })\r\n            .catch(err => {\r\n            });\r\n      }\r\n    render(){\r\n        const { form, error } = this.props.state;\r\n        return(\r\n            <form name=\"form\" onSubmit={this.handleSubmit}>\r\n                <div className=\"field\" >\r\n                    <label>Game id</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"gameid\"\r\n                        value={form.gameid}\r\n                        placeholder=\"in put game ID\"\r\n                        onChange={this.props.handleChange}\r\n                        pattern=\"[\\.0-9]{1,12}\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <Button type=\"submit\" className=\"green\">\r\n                        {\"open\"}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst Button = ({ ...props }) => {\r\n    const { className, type, style, onClick, children } = props;\r\n    return (\r\n      <button\r\n        className={`Button${ className ? ' ' + className : '' }`}\r\n        { ...{ type, style, onClick } }\r\n      >{ children }</button>\r\n    );\r\n  }\r\n\r\nexport default ActionBlock2;\r\n","export default __webpack_public_path__ + \"static/media/182.be886b0a.png\";","export default __webpack_public_path__ + \"static/media/co.9e39142a.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {ActionBlock, ActionBlock2} from './Action';\r\nimport \"./index.css\";\r\nimport img_18 from \"./img/182.png\";\r\nimport img_co from \"./img/co.png\";\r\n\r\nclass Manage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        // Inherit constructor\r\n        // State for form data and error message\r\n        this.state = {\r\n            form: {\r\n                username: '',\r\n                key: '',\r\n                gameid:'',\r\n                error: '',\r\n                },\r\n            console_block_string:'dhsukhudsgkjhdfsajhfd',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n      }\r\n      handleChange(event) {\r\n        const { name, value } = event.target;\r\n        const { form } = this.state;\r\n\r\n        this.setState({\r\n            form: {\r\n                ...form,\r\n                [name]: value,\r\n                error: '',\r\n            },\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { console_block_string } = this.state;\r\n        return(\r\n                <main>\r\n                    <img src={img_18} alt=\"Rice\"/>\r\n                    <ActionBlock setConsole={(parms)=>this.setState({console_block_string:parms})} handleChange={(event)=>this.handleChange(event)} state={this.state}/>\r\n                    <ActionBlock2 setConsole={(parms)=>this.setState({console_block_string:parms})} handleChange={(event)=>this.handleChange(event)} state={this.state}/>\r\n                    <Consoleblock value={this.state.console_block_string} />\r\n                    <h2> testingaccount:haeayhgpzuog</h2>\r\n                    <h2> testingkey:5K4wrLBXqAAMqvK6dFVwArV4U7ooofy8AVGTSkjxRcCprCeRT4o</h2>\r\n                    <img src={img_co} alt=\"Rice\"/>\r\n                </main>\r\n        )\r\n    }\r\n}\r\nclass  Consoleblock extends React.Component {\r\n\r\n\r\n    render(){\r\n\r\n     \r\n    return(\r\n            <h3 id=\"CONTEX\">\r\n                {this.props.value}\r\n            </h3>\r\n        )\r\n    }\r\n}\r\nReactDOM.render(\r\n    <Manage />,\r\n    document.getElementById('root')\r\n);\r\n\r\n                //<ActionBlock setConsole={(parms)=>this.setState({console_block_string:parms})} />\r\n                //"],"sourceRoot":""}