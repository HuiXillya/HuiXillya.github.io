{"version":3,"sources":["Action/API/index.jsx","Action/ActionBlock.jsx","Action/ActionBlock2.jsx","Action/tableinf.jsx","img/18.jpg","img/co.png","index.js"],"names":["takeAction","contract_account","action","dataValue","setCosoleString","a","privateKey","localStorage","getItem","rpc","JsonRpc","signatureProvider","JsSignatureProvider","api","Api","textDecoder","TextDecoder","textEncoder","TextEncoder","transact","actions","account","name","authorization","actor","permission","data","blocksBehind","expireSeconds","resultWithConfig","console","dir","processed","action_traces","inline_traces","concat","contract_code","contract_scope","table_name","key","index","key_type","get_table_rows","json","code","scope","table","lower_bound","index_position","reverse","show_payer","table_result","ApiService","Promise","resolve","reject","from","to","quantity","memo","then","catch","err","gameID","user","serialID","get_table","respone","Button","props","className","type","style","onClick","children","ActionBlock","handleSubmit","bind","event","preventDefault","form","this","state","params","setConsole","setItem","username","numbers","bet","error","onSubmit","value","placeholder","onChange","handleChange","pattern","required","autoComplete","React","Component","ActionBlock2","open","gameid","ConsoleOfTable","console_block_string","handel_look","get_ticket_table","mesg","setState","string_process","rows","ticket_list","str","log","item","JSON","stringify","period","betfunds","Manage","target","src","img_18","alt","parms","img_co","Consoleblock","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c44443a.chunk.js","sourcesContent":["import { Api, JsonRpc } from 'eosjs';\r\nimport React, { useState } from 'react';\r\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig'\r\nvar delay = function(s){\r\n  return new Promise(function(resolve,reject){\r\n   setTimeout(resolve,s); \r\n  });\r\n};\r\n\r\nasync function takeAction(contract_account,action,dataValue,setCosoleString) {\r\n    const privateKey = localStorage.getItem(\"User_EOS_key\");\r\n    const rpc = new JsonRpc(\"http://34.121.200.21:8888\");\r\n    const signatureProvider = new JsSignatureProvider([privateKey]);\r\n    const api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\r\n  \r\n    // Main call to blockchain after setting action, account_name and data\r\n    try {\r\n      const resultWithConfig = await api.transact({\r\n        actions: [{\r\n          account:contract_account,\r\n          name: action,\r\n          authorization: [{\r\n            actor: localStorage.getItem(\"User_EOS_account\"),\r\n            permission: 'active',\r\n          }],\r\n          data: dataValue,\r\n        }]\r\n      }, {\r\n        blocksBehind: 3,\r\n        expireSeconds: 30,\r\n      });\r\n    \r\n      console.dir(resultWithConfig);\r\n      if(action==\"transfer\"){\r\n        setCosoleString(resultWithConfig.processed.action_traces[0].inline_traces[1].console.concat(\"\\n waiting for open \"));\r\n        // return delay(1000).then(()=>ApiService.open(setCosoleString,parseInt(resultWithConfig.processed.action_traces[0].inline_traces[1].console.substring(9,64)),10)) ;\r\n      }\r\n      if(action==\"open\"){\r\n        setCosoleString(resultWithConfig.processed.action_traces[0].console);\r\n      }\r\n      return resultWithConfig;\r\n    } catch (err) {\r\n      console.dir(err)\r\n      throw(err)\r\n    }\r\n  }\r\nasync function get_table(contract_code,contract_scope,table_name,key,index,key_type){\r\n  const rpc = new JsonRpc(\"http://34.121.200.21:8888\");\r\n  try{\r\n    const table_result= await rpc.get_table_rows({\r\n      json: true,                 // Get the response as json\r\n      code: contract_code,           // Contract that we target\r\n      scope: contract_scope,          // Account that owns the data\r\n      table: table_name,          // Table name\r\n      lower_bound: key,           // Table primary key value\r\n      index_position: index,\r\n      key_type:key_type,    \r\n      //limit: 1,                 // Here we limit to 1 to get only the single row with primary key equal to 'testacc'\r\n      reverse: false,             // Optional: Get reversed data\r\n      show_payer: false,          // Optional: Show ram payer\r\n    });\r\n    return table_result;\r\n  }catch (err) {\r\n    console.dir(err)\r\n    throw(err)\r\n  }\r\n  \r\n}\r\nclass ApiService {\r\n  static bet(setCosoleString){\r\n      return new Promise((resolve, reject) => {\r\n        if (!localStorage.getItem(\"User_EOS_account\")) {\r\n          return reject();\r\n        }\r\n        takeAction(\"eosio.token\",\"transfer\", { from: localStorage.getItem(\"User_EOS_account\"),to: \"lottery\",quantity: \"1.0000 TNT\",memo: \"bet:\".concat(localStorage.getItem(\"User_EOS_numbers\"))},setCosoleString)\r\n          .then(() => {\r\n            resolve();\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n  \r\n    }\r\n  static open(setCosoleString,gameID){\r\n    return new Promise((resolve, reject) => {\r\n      if (!localStorage.getItem(\"User_EOS_account\")) {\r\n        return reject();\r\n      }\r\n      takeAction(\"lottery\",\"redeem\", { user: localStorage.getItem(\"User_EOS_account\"),serialID:gameID},setCosoleString)\r\n        .then(() => {\r\n          resolve();\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  \r\n  }\r\n  static get_ticket_table(){\r\n    return new Promise((resolve, reject) =>{\r\n      if (!localStorage.getItem(\"User_EOS_account\")) {\r\n        return reject();\r\n      }\r\n      get_table(\"lottery\",\"lottery\",\"ticket\",localStorage.getItem(\"User_EOS_account\"),2,\"i64\")\r\n        .then((respone)=>{\r\n          resolve(respone);\r\n        })\r\n        .catch(err=>{\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n  \r\n}\r\nexport default ApiService;","import React from 'react';\r\nimport ApiService from './API';\r\n\r\nconst Button = ({ ...props }) => {\r\n  const { className, type, style, onClick, children } = props;\r\n  return (\r\n    <button\r\n      className={`Button${ className ? ' ' + className : '' }`}\r\n      { ...{ type, style, onClick } }\r\n    >{ children }</button>\r\n  );\r\n}\r\n\r\n\r\nclass ActionBlock extends React.Component {\r\n    constructor(props) {\r\n        // Inherit constructor\r\n        super(props);\r\n        // State for form data and error message\r\n        \r\n        // Bind functions\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        // Stop the default form submit browser behaviour\r\n        event.preventDefault();\r\n        // Extract `form` state\r\n        const { form } = this.props.state;\r\n        const setCosoleString=(params) => this.props.setConsole(params);\r\n        // Extract `setUser` of `UserAction` and `user.name` of UserReducer from redux\r\n        //const { setUser } = this.props;\r\n        console.dir(\"dhfkajshfljashfla\");\r\n        localStorage.setItem(\"User_EOS_key\", form.key);\r\n        localStorage.setItem(\"User_EOS_account\", form.username);\r\n        localStorage.setItem(\"User_EOS_numbers\", form.numbers);\r\n        // Send a login transaction to the blockchain by calling the ApiService,\r\n        // If it successes, save the username to redux store\r\n        // Otherwise, save the error state for displaying the message\r\n        this.props.setConsole(\"waiting~~\");\r\n        return ApiService.bet(setCosoleString)\r\n            .then(() => {\r\n                console.dir(\"\");\r\n                \r\n            })\r\n            .catch(err => {\r\n                setCosoleString(\"some thing was wrong please try it again\")\r\n            });\r\n      }\r\n    render() {\r\n        const { form, error } = this.props.state;\r\n        return (\r\n            <form name=\"form\" onSubmit={this.handleSubmit}>\r\n                <div className=\"field\">\r\n                    <label>Account name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={form.username}\r\n                        placeholder=\"All small letters, a-z, 1-5 or dot, max 12 characters\"\r\n                        onChange={this.props.handleChange}\r\n                        pattern=\"[\\.a-z1-5]{2,12}\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Private key</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"key\"\r\n                        value={form.key}\r\n                        onChange={this.props.handleChange}\r\n                        pattern=\"^.{51,}$\"\r\n                        required\r\n                        autoComplete=\"new-password\"\r\n                    />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>numbers</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"numbers\"\r\n                        value={form.numbers}\r\n                        placeholder=\"5 numbers from 1-39 splited by ',' and period  ex:1,2,3,4,5:1\"\r\n                        onChange={this.props.handleChange}\r\n                        required\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"field form-error\">\r\n                    {error && <span className=\"error\">{error}</span>}\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <Button type=\"submit\" className=\"green\">\r\n                        {\"BET\"}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ActionBlock;\r\n","import React from 'react';\r\nimport ApiService from './API';\r\n\r\nclass ActionBlock2 extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(event) {\r\n        // Stop the default form submit browser behaviour\r\n        event.preventDefault();\r\n        // Extract `form` state\r\n        const { form } = this.props.state;\r\n        const setCosoleString=(params) => this.props.setConsole(params);\r\n        // Extract `setUser` of `UserAction` and `user.name` of UserReducer from redux\r\n        //const { setUser } = this.props;\r\n        console.dir(\"dhfljashfla\");\r\n        localStorage.setItem(\"User_EOS_key\", form.key);\r\n        localStorage.setItem(\"User_EOS_account\", form.username);\r\n        // Send a login transaction to the blockchain by calling the ApiService,\r\n        // If it successes, save the username to redux store\r\n        // Otherwise, save the error state for displaying the message\r\n        this.props.setConsole(\"waiting~~\");\r\n        return ApiService.open(setCosoleString,form.gameid)\r\n            .then(() => {\r\n                console.dir(\"dhfljtututuhfla\");\r\n            })\r\n            .catch(err => {\r\n            });\r\n      }\r\n    render(){\r\n        const { form, error } = this.props.state;\r\n        return(\r\n            <form name=\"form\" onSubmit={this.handleSubmit}>\r\n                <div className=\"field\" >\r\n                    <label>Game id</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"gameid\"\r\n                        value={form.gameid}\r\n                        placeholder=\"in put game ID\"\r\n                        onChange={this.props.handleChange}\r\n                        pattern=\"[\\.0-9]{1,12}\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <Button type=\"submit\" className=\"green\">\r\n                        {\"open\"}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst Button = ({ ...props }) => {\r\n    const { className, type, style, onClick, children } = props;\r\n    return (\r\n      <button\r\n        className={`Button${ className ? ' ' + className : '' }`}\r\n        { ...{ type, style, onClick } }\r\n      >{ children }</button>\r\n    );\r\n  }\r\n\r\nexport default ActionBlock2;\r\n","import React from 'react';\r\nimport ApiService from './API';\r\n\r\n\r\nclass  ConsoleOfTable extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            console_block_string:'unkunow',\r\n        }\r\n        this.handel_look=this.handel_look.bind(this);\r\n    }\r\n    handel_look(){\r\n        \r\n        return ApiService.get_ticket_table()\r\n            .then((mesg) => {\r\n                console.dir(mesg);\r\n                //this.setState({console_block_string:JSON.stringify(mesg.rows)})\r\n                this.setState({console_block_string:this.string_process(mesg.rows)});\r\n            })\r\n            .catch(err => {\r\n                console.dir(err);\r\n                this.setState({console_block_string:\"some thing was wrong please try it again\"});\r\n            });\r\n    }\r\n    string_process(ticket_list){\r\n        var str='data:\\n';\r\n       \r\n\r\n        console.log(ticket_list)\r\n        \r\n        for (const item of ticket_list) {\r\n            str=str.concat('asdasd  ');\r\n            str=str.concat('ID: ',JSON.stringify(item.serialID),'   ');\r\n            str=str.concat('Numbers :',JSON.stringify(item.numbers),'   ');\r\n            str=str.concat('Period :',item.period,'   ');\r\n            str=str.concat('Funds :',item.betfunds,'   ');\r\n            str=str.concat('\\n');\r\n          }\r\n        for (const item of ticket_list) {\r\n            console.log(item)\r\n          }\r\n        console.log(str);\r\n        return str ;\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <p>\r\n                \r\n                {this.state.console_block_string}\r\n                \r\n                <button onClick={this.handel_look}>find my ticket</button>\r\n            </p>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default ConsoleOfTable;","export default __webpack_public_path__ + \"static/media/18.a4518252.jpg\";","export default __webpack_public_path__ + \"static/media/co.9e39142a.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {ActionBlock, ActionBlock2,ConsoleOfTable} from './Action';\r\nimport \"./index.css\";\r\nimport img_18 from \"./img/18.jpg\";\r\nimport img_co from \"./img/co.png\";\r\n\r\nclass Manage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        // Inherit constructor\r\n        // State for form data and error message\r\n        this.state = {\r\n            form: {\r\n                username: '',\r\n                key: '',\r\n                numbers:'',\r\n                period:'',\r\n                gameid:0,\r\n                error: '',\r\n                },\r\n            console_block_string:'welcome ',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n      }\r\n      handleChange(event) {\r\n        const { name, value } = event.target;\r\n        const { form } = this.state;\r\n\r\n        this.setState({\r\n            form: {\r\n                ...form,\r\n                [name]: value,\r\n                error: '',\r\n            },\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { console_block_string } = this.state;\r\n        return(\r\n                <main>\r\n                    <img src={img_18} alt=\"Rice\"/>\r\n                    <ActionBlock setConsole={(parms)=>this.setState({console_block_string:parms})} handleChange={(event)=>this.handleChange(event)} state={this.state}/>\r\n                    <ActionBlock2 setConsole={(parms)=>this.setState({console_block_string:parms})} handleChange={(event)=>this.handleChange(event)} state={this.state}/>\r\n                    <Consoleblock value={this.state.console_block_string} />\r\n                    <h2> testingaccount:tester</h2>\r\n                    <h2> testingkey:5HxM6iGfYDYTLHDgRruBhbzzSsxndxfLXXswq4C1AS8gkLVGz3E</h2>\r\n                    <img src={img_co} alt=\"Rice\"/>\r\n                    <ConsoleOfTable/>\r\n                    <p>{}</p>\r\n                </main>\r\n        )\r\n    }\r\n}\r\nclass  Consoleblock extends React.Component {\r\n    render(){\r\n    return(\r\n            <h3 id=\"CONTEX\">\r\n                {this.props.value}\r\n            </h3>\r\n        )\r\n    }\r\n}\r\nReactDOM.render(\r\n    <Manage />,\r\n    document.getElementById('root')\r\n);\r\n\r\n                //<ActionBlock setConsole={(parms)=>this.setState({console_block_string:parms})} />\r\n                //"],"sourceRoot":""}